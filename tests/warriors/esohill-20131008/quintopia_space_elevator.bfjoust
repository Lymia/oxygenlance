space_elevator by quintopia, version 2_0_1
change locking loop to undermine clear with flag repair (thanks ais523)
now checks tripwires on short tape
leaves size 4 trail when returning to poked position on short to medium tape
leaves size 2 trail later on medium to long tapes to beat waterfall3
got rid of 3cycle clears, may add one back later for first big clear to confuse defenders
interrupted rush to add more decoys on medium tape
clear loops end with exactly two closing braces to defeat triplocks
bump flag by more later and not at all earlier
switch polarity of clear after 2 cells on all tape lengths
lay a trail between first decoy and reverse tripwires to slow opponents who manage to get behind first decoy
build up first reverse tripwire into small decoy to slow fast opponents on short tapes
ideas for future versions: backup attacks to handle timing attacks, second tripwire checks for fast to slow rushers,

>+>->>>++>>>                 leave two tripwires and go find the other guy
+>                        i'll just leave this here
[(<)*5(-)*50<<            opponent found; back off fast and build a big decoy; maybe we can afford two on short tape
  +[
     (>)*6>++++[-[-[-[-[-[-[-[-[(-)*60(<)*9(+)*256(>)*9(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*9(.)*60(+)*256(>)*9((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
   ]-----
  <-[
     (>)*7>++++[-[-[-[-[-[-[-[-[(-)*60(<)*9(+)*256(>)*9(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*9(.)*60(+)*256(>)*9((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
   ]

     >>(+)*50       
        (>)*5(>[(-)*4([+{[(+)*30[-][+][-]]}[-]])%8[+]][-][+][-])*1(<)*6<(-)*70<(+)*70<(-)*9>(>)*9(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*19
]>                        look again! 2
[(<)*6(-)*50<<             opponent found; back off fast and build a big decoy; maybe we can afford two on short tape
  +[
     (>)*7>++++[-[-[-[-[-[-[-[-[(-)*60(<)*10(+)*256(>)*10(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*10(.)*60(+)*256(>)*10((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
   ]-----
  <-[
     (>)*8>++++[-[-[-[-[-[-[-[-[(-)*60(<)*10(+)*256(>)*10(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*10(.)*60(+)*256(>)*10((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
   ]

     >>(+)*50
        (>)*2(++++>)*4(>[(-)*4([+{[(+)*30[-][+][-]]}[-]])%8[+]][-][+][-])*1(<)*8(-)*70<(+)*70<(-)*9>(>)*10(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*17
]>                        look again! 3
[(<)*7(-)*50              opponent found; back off fast and build a big decoy
<<
 +[                       tripwire tripped! the opponent is working on our flag! 
    (>)*8>++++[-[-[-[-[-[-[-[-[(-)*60(<)*11(+)*256(>)*11(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*11(.)*60(+)*256(>)*11((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
 <-[                      tripwire tripped! the opponent is working on our flag! 111 cycles into program; opponent cannot have reduced flag by more than 47; wait 98 and start 2-cycle defend
    (>)*9>++++[-[-[-[-[-[-[-[-[(-)*60(<)*11(+)*256(>)*11(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*11(.)*60(+)*256(>)*11((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
   ]+


>>(-)*55                 tripwire not tripped! assume opponent is defender or slow rush
<(+)*55
        (>)*3(++++>)*5(>[(-)*4([+{[(+)*30[-][+][-]]}[-]])%8[+]][-][+][-])*2(<)*11(+)*70<(-)*9>(>)*12(>[(+)*4([-{[(-)*40[+][-][+]]}[-]])%8[+]][-][+][-]++)*16
]+>                       look again! 4
[(<)*7(-)*50              opponent found; back off fast and build a big decoy
<<<
 +[
                          tripwire tripped!
     (>)*9>++++[-[-[-[-[-[-[-[-[(-)*60(<)*12(+)*256(>)*12(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*12(.)*60(+)*256(>)*12((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
 <-[
                          tripewire tripped!
     (>)*10>++++[-[-[-[-[-[-[-[-[(-)*60(<)*12(+)*256(>)*12(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*12(.)*60(+)*256(>)*12((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-

 >>>(+)*55                  tripwire not tripped! assume opponent is defender or slow rush
   <(-)*55
   <(-)*55
        (>)*4(++++>)*5(>[(-)*4([+{[(+)*30[-][+][-]]}[-]])%8[+]][-][+][-])*2(<)*12(-)*70<(-)*9>(>)*13(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*16

]>                        look again! 5
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
<<<
 +[
                          tripwire tripped!
    (>)*10>++++[-[-[-[-[-[-[-[-[(-)*60(<)*13(+)*256(>)*13(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*13(.)*60(+)*256(>)*13((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
 ]-----
<-[
                          tripwire tripped!
    (>)*11>++++[-[-[-[-[-[-[-[-[(-)*60(<)*13(+)*256(>)*13(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*13(.)*60(+)*256(>)*13((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
 ]+
<(-)*9>
  >>>(+)*55                  tripwire not tripped! assume opponent is defender or slow rush
    <(-)*55
    <(-)*55
    <(+)*55
        (>)*5(++++>)*6(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*19
]>                        look again! 6
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
<<<<
 +[
                          tripwire tripped!
    (>)*11>++++[-[-[-[-[-[-[-[-[(-)*60(<)*14(+)*256(>)*14(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*14(.)*60(+)*256(>)*14((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
 ]+++++
<-[
                          tripwire tripped!
    (>)*12>++++[-[-[-[-[-[-[-[-[(-)*60(<)*14(+)*256(>)*14(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*14(.)*60(+)*256(>)*14((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
 ]-
<(-)*9>
  >>>>(+)*55                  tripwire not tripped! assume opponent is defender or slow rush
     <(-)*55
     <(-)*55
     <(+)*55
     <(-)*55
        (>)*6(++++>)*7(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]>                       look again! 7
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*5
 [
                          you get the idea
     (>)*12>++++[-[-[-[-[-[-[-[-[(-)*60(<)*15(+)*256(>)*15(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*15(.)*60(+)*256(>)*15((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
 ]-
<-[
     (>)*13>++++[-[-[-[-[-[-[-[-[(-)*60(<)*15(+)*256(>)*15(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*15(.)*60(+)*256(>)*15((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
]+
<(-)*9>
  >>>>>(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*55
      <(-)*55
      <(+)*55
      <(-)*55
      <(+)*55
        (>)*7(++++>)*6(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]+>                        look again! 8
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*6
 [
     (>)*13>++++[-[-[-[-[-[-[-[-[(-)*60(<)*16(+)*256(>)*16(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*16(.)*60(+)*256(>)*16((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1

 ]+++++
<-[
     (>)*14>++++[-[-[-[-[-[-[-[-[(-)*60(<)*16(+)*256(>)*16(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*16(.)*60(+)*256(>)*16((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
 ]-
<(-)*9>
  (>)*6(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*55
      <(+)*55
      <(-)*55
      <(+)*55
      <(-)*55
        (>)*8(++++>)*6(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]>                        look again! 9
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*7
 [
     (>)*14>++++[-[-[-[-[-[-[-[-[(-)*60(<)*17(+)*256(>)*17(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*17(.)*60(+)*256(>)*17((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1

 ]+++++
<-[
     (>)*15>++++[-[-[-[-[-[-[-[-[(-)*60(<)*17(+)*256(>)*17(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*17(.)*60(+)*256(>)*17((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-
<(-)*9>

  (>)*7(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*55
      <(-)*55
      <(+)*55
      <(+)*55
      <(-)*55
        (>)*9(++++>)*6(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]>                       look again! 10
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*8
 [
    (>)*15>++++[-[-[-[-[-[-[-[-[(-)*60(<)*18(+)*256(>)*18(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*18(.)*60(+)*256(>)*18((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
   ]-----
 <-[
    (>)*16>++++[-[-[-[-[-[-[-[-[(-)*60(<)*18(+)*256(>)*18(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*18(.)*60(+)*256(>)*18((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
   ]+
<(-)*9>

  (>)*8(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*33
      <(-)*55
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*55
        (>)*10(++++>)*6(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]>                        look again! 11
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*9
 [
    (>)*16>++++[-[-[-[-[-[-[-[-[(-)*60(<)*19(+)*256(>)*19(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*19(.)*60(+)*256(>)*19((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1

  ]-----
<-[  
    (>)*17>++++[-[-[-[-[-[-[-[-[(-)*60(<)*19(+)*256(>)*19(-)*60[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*19(.)*60(+)*256(>)*19((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]+
<(-)*9>
  (>)*9(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*33
      <(-)*55
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*54
        (>)*10(++++>)*6(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]+>                        look again! 12
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*10
 [
    (>)*17>++++[-[-[-[-[-[-[-[-[(-)*40(<)*20(+)*256(>)*20(-)*80[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*20(.)*60(+)*256(>)*20((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
<-[
    (>)*18>++++[-[-[-[-[-[-[-[-[(-)*40(<)*20(+)*256(>)*20(-)*80[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*20(.)*60(+)*256(>)*20((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]+
<(-)*9>
 (>)*10(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*55
      <(-)*55
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*55
        (>)*16(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]>                       look again! 13
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*11
 [
    (>)*18>++++[-[-[-[-[-[-[-[-[(-)*30(<)*21(+)*256(>)*21(-)*90[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*21(.)*60(+)*256(>)*21((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
<-[
    (>)*19>++++[-[-[-[-[-[-[-[-[(-)*30(<)*21(+)*256(>)*21(-)*90[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*21(.)*60(+)*256(>)*21((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]+
<(-)*9>
 (>)*11(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*33
      <(-)*55
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*55
      <(-)*55
        (>)*17(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]>                        look again! 14
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*12
 [
    (>)*19>++++[-[-[-[-[-[-[-[-[(-)*20(<)*22(+)*256(>)*22(-)*100[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*22(.)*60(+)*256(>)*22((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
<-[
    (>)*20>++++[-[-[-[-[-[-[-[-[(-)*20(<)*22(+)*256(>)*22(-)*100[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*22(.)*60(+)*256(>)*22((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]+
<(-)*9>
 (>)*12(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*33
      <(-)*33
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*55
      <(+)*55
        (>)*17(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]>                        look again! 15
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*13
 [
    (>)*20>++++[-[-[-[-[-[-[-[-[(-)*10(<)*23(+)*256(>)*23(-)*110[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*23(.)*60(+)*256(>)*23((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
<-[
    (>)*21>++++[-[-[-[-[-[-[-[-[(-)*10(<)*23(+)*256(>)*23(-)*110[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*23(.)*60(+)*256(>)*23((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]+
<(-)*9>
 (>)*13(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*33
      <(-)*33
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*55
      <(+)*55
        (>)*17(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
 
]+>                       look again! 16
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*14
 [
    <<(+)*256>>
    (>)*21>++++[-[-[-[-[-[-[-[-[(-)*120[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*24(.)*60(+)*256(>)*24((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
<-[
    <(-)*256>
    (>)*22>++++[-[-[-[-[-[-[-[-[(-)*120[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*24(.)*60(+)*256(>)*24((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]+
<(-)*9>
 (>)*14(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*33
      <(-)*33
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*55
      <(+)*55
        (>)*17(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]>                        look again! 17
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*15
 [
    <<(+)*256>>
    (>)*22>++++[-[-[-[-[-[-[-[-[(-)*120[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*25(.)*60(+)*256(>)*25((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
<-[
    <(-)*256>
    (>)*23>++++[-[-[-[-[-[-[-[-[(-)*120(<)*25(+)*256(>)*25(-)*80[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*25(.)*60(+)*256(>)*25((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]+
<(-)*9>
 (>)*15(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*33
      <(-)*33
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*55
      <(+)*55
        (>)*17(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
 
]>                        look again! 18
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*16
 [
    <<(+)*256>>
    (>)*23>++++[-[-[-[-[-[-[-[-[(-)*120[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*26(.)*60(+)*256(>)*26((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
<-[
    <(-)*256>
    (>)*24>++++[-[-[-[-[-[-[-[-[(-)*120[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*26(.)*60(+)*256(>)*26((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]+
<(-)*9>
 (>)*16(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*33
      <(-)*33
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*55
      <(+)*55
        (>)*17(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]>                       look again! 19
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*17
 [
    <<(+)*256>>
    (>)*24>++++[-[-[-[-[-[-[-[-[(-)*120[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*27(.)*60(+)*256(>)*27((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
<-[
    <(-)*256>
    (>)*25>++++[-[-[-[-[-[-[-[-[(-)*120[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*27(.)*60(+)*256(>)*27((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
 ]+
<(-)*9>
 (>)*17(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*33
      <(-)*33
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*55
      <(+)*55
        (>)*17(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
]>                        look again! 20
[(<)*8(-)*33              opponent found; back off fast and build a big decoy
(<+)*18
 [
    <<(+)*256>>
    (>)*25>++++[-[-[-[-[-[-[-[-[(-)*120[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*28(.)*60(+)*256(>)*28((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]-----
<-[
    <(-)*256>
    (>)*26>++++[-[-[-[-[-[-[-[-[(-)*120[-]((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1]]]]]]]]](<)*28(.)*60(+)*256(>)*28((>++++[-[-[-[-[-[-[-[-[(-)*120[-]{}]]]]]]]]])%29)*-1
  ]+
<(-)*9>
 (>)*18(+)*33                  tripwire not tripped! assume opponent is defender or slow rush
      <(-)*33
      <(-)*33
      <(+)*33
      <(-)*33
      <(+)*55
      <(+)*55
      <(-)*55
      <(+)*55
      <(+)*55
        (>)*17(>[(-)*4([+{[(+)*40[-][+][-]]}[-]])%8[+]][-][+][-]++)*2(>[(+)*4([-{[(-)*40[+][-][+]]}[+]])%8[-]][-][+][-]++)*18
 
]>                        look again! 21
(-)*116(.-)*256(..-)*256[[..-]]              yeah, let's not jump through hoops when we're already at the flag :P